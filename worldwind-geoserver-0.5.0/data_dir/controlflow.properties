### Total OWS request count
## The global number of OWS requests executing in parallel can be specified with:
## Every request in excess will be queued and executed when other requests complete 
## leaving some free execution slot.
#ows.global=<count>
##
### Per request control
## A per request type control can be demanded using the following syntax:
#ows.<service>[.<request>[.<outputFormat>]]=<count>
## Where:
##  <service> is the OWS service in question (at the time of writing can be wms, wfs, wcs)
##  <request>, optional, is the request type. For example, for the wms service it can be GetMap, GetFeatureInfo, DescribeLayer, GetLegendGraphics, GetCapabilities
##  <outputFormat>, optional, is the output format of the request. For example, for the wms GetMap request it could be image/png, image/gif and so on
##
### Per user concurrency control
## There are two mechanisms to identify user requests. The first one is cookie based, 
## so it will work fine for browsers but not as much for other kinds of clients. The 
## second one is ip based, which works for any type of client but that can limit all 
## the users sitting behind the same router. This avoids a single user (as identified 
## by a cookie) to make too many requests in parallel:
#user=<count>
## Where <count> is the maximum number of requests a single user can execute in parallel.
##
## The following avoids a single ip address from making too many requests in parallel:
# ip=<count>
## Where <count> is the maximum number of requests a single ip address can execute in parallel.
##
## It is also possible to make this a bit more specific and throttle a single ip address instead by using the following:
# ip.<ip_addr>=<count>
## Where <count> is the maximum number of requests the ip speficied in <ip_addr> will execute in parallel.
##
## To reject requests from a list of ip addresses:
# ip.blacklist=<ip_addr1>,<ip_addr2>,...


## Example
# If a request waits in queue for more than 60 seconds it's not worth executing,
# the client will  likely have given up by then
#timeout=60

# Don't allow the execution of more than 100 requests total in parallel
#ows.global=100

# Don't allow more than 10 GetMap in parallel
#ows.wms.getmap=10

# Don't allow more than 4 outputs with Excel output as it's memory bound
#ows.wfs.getfeature.application/msexcel=4

# Don't allow a single user to perform more than 6 requests in parallel
# (6 being the Firefox default concurrency level at the time of writing)
#user=6

# Don't allow the execution of more than 16 tile requests in parallel
# (assuming a server with 4 cores, GWC empirical tests show that throughput
# peaks up at 4 x number of cores. Adjust as appropriate to your system)
#ows.gwc=16